# A container for all things Data, be sure to set a secret password for
# discourse account, SOME_SECRET is just an example
#

templates:
  - "templates/postgres.template.yml"
  - "templates/redis.template.yml"
  - "templates/sshd.template.yml"
  - "templates/syslog.papertrail.template.yml"

expose:
  - "5433:5432"
  - "6379:6379"
  # - "2221:22"

# any extra arguments for Docker?
# docker_args:

params:
  db_default_text_search_config: "pg_catalog.english"

  ## Set db_shared_buffers to a max of 25% of the total memory.
  ##
  ## On 1GB installs set to 128MB (to leave room for other processes)
  ## on a 4GB instance you may raise to 1GB
  #db_shared_buffers: "256MB"
  #
  ## Set higher on large instances it defaults to 10MB, for a 3GB install 40MB is a good default
  ## this improves sorting performance, but adds memory usage per-connection
  #db_work_mem: "40MB"
  #

env:
  # ensure locale exists in container, you may need to install it
  LANG: en_US.UTF-8

volumes:
  - volume:
        host: /srv/discourse/shared/data
        guest: /shared
  - volume:
        host: /srv/discourse/shared/data/log/var-log
        guest: /var/log

# TODO: SOME_SECRET to a password for the discourse user
hooks:
  after_postgres:
    - exec:
        stdin: |
          alter user discourse with password '{{ pillar['kazamatsuri']['discourse']['db_password'] }}';
        cmd: su - postgres -c 'psql discourse'

        raise_on_fail: false
{% for site in pillar['sites'][1:] %}
    - exec: sudo -u postgres createdb {{ site['id'] }}_discourse || exit 0
    - exec:
         stdin: |
           grant all privileges on database {{ site['id'] }}_discourse to discourse;
         cmd: sudo -u postgres psql {{ site['id'] }}_discourse
         raise_on_fail: false
    - exec: |
       /bin/bash -c 'sudo -u postgres psql {{ site['id'] }}_discourse <<< "alter schema public owner to discourse;"'
    - exec: |
       /bin/bash -c 'sudo -u postgres psql {{ site['id'] }}_discourse <<< "create extension if not exists hstore;"'
    - exec: |
       /bin/bash -c 'sudo -u postgres psql {{ site['id'] }}_discourse <<< "create extension if not exists pg_trgm;"'
{% endfor %}
