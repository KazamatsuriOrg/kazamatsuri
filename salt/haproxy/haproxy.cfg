global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon
	
	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private
	
	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3

defaults
	log global
	mode http
	option httplog
	option dontlognull
	timeout connect 5000
	timeout client  50000
	timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

frontend http
	bind *:80
	
	mode http
	option http-keep-alive
	timeout http-keep-alive 3000
	
	stats enable
	stats hide-version
	stats refresh 15s
	stats uri /ha-stats
	{% for user in pillar['haproxy']['stats_users'] -%}
	stats auth {{ user.keys()[0] }}:{{ user.values()[0] }}
	{% endfor -%}
	stats admin if TRUE
	
	# Strip "www." from URLs
	acl host_www hdr_beg(host) -i www.
	reqirep ^Host:\ www.(.*)$ Host:\ \1 if host_www
	redirect prefix / code 301 if host_www
	
	{% for site in pillar['sites'] -%}
	{% with domain = pillar[site]['domain_local' if grains.get('vagrant', False) else 'domain'] -%}
	{% if 'discourse' in pillar[site]['use'] %}use_backend discourse if { hdr_dom(host) -i forum.{{ domain }} }{% endif %}
	use_backend {{ site }} if { hdr_dom(host) -i {{ domain }} }
	{% endwith %}
	{% endfor %}

{% for site in pillar['sites'] %}
backend {{ site }}
	balance roundrobin
	cookie bestgirl insert
	option httpchk GET {{ pillar[site]['haproxy']['check_url'] }} HTTP/1.1\r\nHost:{{ pillar[site]['domain'] }}
	
	{% for server, addrs in salt['mine.get']('roles:web', 'private_ip_addrs', expr_form='grain').items() -%}
	server {{ server }} {{ addrs[0] }}:80 cookie {{ server }} check
	{% endfor -%}
{% endfor %}

backend discourse
	balance roundrobin
	cookie bestgirl insert
	option httpchk GET /about HTTP/1.1\r\nHost:forum.kazamatsuri.{{ 'local' if grains.get('vagrant', False) else 'org' }}
	
	{% for server, addrs in salt['mine.get']('roles:web', 'private_ip_addrs', expr_form='grain').items() -%}
	server {{ server }} {{ addrs[0] }}:10080 cookie {{ server }} check
	{% endfor -%}
